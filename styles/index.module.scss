@use 'variables.scss';

.main {
  min-height: 100vh;
  padding-bottom: 2rem;
  gap: 2rem;
  display: flex;
  flex-direction: column;
  color: #c02929;
}

.background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  display: flex;
}

.cogsRight {
  @include variables.cogs;
  transform: rotate(-90deg) translate(-10%, 60%);
  margin-right: 0;
  margin-left: auto;
  filter: brightness(0.5) sepia(1) hue-rotate(-40deg) contrast(2);

  @media screen and (min-width: variables.$small-screen){
    display: none;
  }
}
 
.cogsLeft {
  @include variables.cogs;
  transform: rotate(140deg) translate(20%, 50%);
  margin-left: 0;
  margin-right: auto;
  filter: brightness(0.5) sepia(1) hue-rotate(-40deg) contrast(2);

  @media screen and (max-width: variables.$small-screen){
    transform: translate(-55%, 85%) scaleX(-1) rotate(-80deg) ;
  }
}

.logo {
  @include variables.logo;
  font-size: 7rem;
  line-height: calc(7rem * 1.2);
  letter-spacing: -0.1rem;
  max-width: max-content;
  padding-right: 0.1rem; // To fix last letter being cut off
  margin: 0;
  color: white;
  z-index: 2;

  @media screen and (max-width: variables.$small-screen) {
    font-size: 4rem;
    line-height: calc(4rem * 1.2);
  }
}

.topBlob {
  padding: 0;
  margin: 0;
  position: absolute;
  top: 0;
  left: 0;
  height: 45rem;
  aspect-ratio: 1165 / 896; // aspect of svg
  z-index: -1;
  pointer-events: none;
  display: none;

  @media screen and (min-width: variables.$small-screen) {
    display: inherit;
  }

  @media screen and (min-width: variables.$large-screen) {
    height: 50rem;
  }
}

.firstSection {
  height: 35rem;
  aspect-ratio: 1165 / 896; // aspect of svg
  display: flex;
  flex-direction: column;
  padding: 2rem 0 0 2rem;
  margin-top: 5%;
  overflow: hidden;
  gap: 0.5rem;

  @media screen and (min-width: variables.$large-screen) {
    height: 40rem;
    max-width: 70vw;
  }
}
 
.subtitle {
  width: 75%;
  color: white;
  font-size: 1.75rem;
  line-height: calc(1.75rem * 1.4);
  margin: 0;
  font-weight: 700;
  z-index: 2;

  @media screen and (max-width: variables.$large-screen) {
    max-width: 50rem;
  }
}

.firstSection > .button {
  @media screen and (min-width: variables.$small-screen){
    background-color: #1e0531;
  }
}

.button {
  @include variables.button;
  z-index: 2;
}

.container {
  overflow: hidden;
  width: 10rem;
  height: 10rem;
  position: relative;
}

// .bookStackImage {
//   max-width: 70%;
//   margin-top: 3rem;
//   z-index: -1;

//   @media screen and (min-width: variables.$large-screen) {
//     position: absolute;
//     top: 6rem;
//     right: 2rem;
//     width: 45%;
//   }
// }

.castleImage {
  max-width: 70%;
  // z-index: -1;

  @media screen and (min-width: variables.$large-screen) {
    position: absolute;
    top: 4rem;
    right: 2rem;
    width: 45%;
  }
}

.multilingualHeader {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  color: variables.$white;
  font-size: 3rem;
  font-weight: 700;
  margin: 8rem 1.5rem 0 1.5rem;

  @media screen and (min-width: variables.$large-screen) {
    display: none;
  }
}

.gradientHighlight {
  color: variables.$accent-green;
  font-size: 5rem;
  margin: -1rem 0 0 0;
  
  background: -webkit-linear-gradient(left,#22C55E, #22BBC5);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  
  transform: translateY(100%);
  clip-path: inset(0 0 100% 0);
  transition: all 0.75s 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
  transition-delay: 0.5s;
}

.show {
  transform: translateY(0);
  clip-path: inset(0);
}

.bookstackContainer {
  width: max-content;
  max-width: 100%;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.library {
  display: flex;
  position: relative;
  padding-top: 0;
  height: 55rem;

  @media screen and (max-width: variables.$small-screen) {
    flex-direction: column-reverse;
  }

  @media screen and (max-width: variables.$medium-screen) {
    height: 70rem;
  }

  @media screen and (min-width: variables.$large-screen) {
    height: 65rem;
  }
}

.libraryBlob {
  padding: 0;
  margin: 0;
  right: 100%;
  position: absolute;
  aspect-ratio: 1039 / 1188; // aspect of svg
  z-index: -1;
  pointer-events: none;
  
  @media screen and (max-width: variables.$medium-screen) {
    top: 0rem;
    height: 55rem;
  }
  
  @media screen and (min-width: variables.$large-screen) {
    height: 65rem;
  }
}

.libraryBlobContainer {
  position: relative;
  top: 0;
  width: 0;
  height: 0;
  margin-left: auto;
}

.libraryTextContainer {
  justify-self: flex-end;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  overflow-x: visible;

  position: absolute;
  right: 0;
  top: 20%;

  width: min-content;
  height: max-content;
  
  aspect-ratio: 1165 / 896; // aspect of svg 
  
  padding-top: 0;
  
  @media screen and (max-width: variables.$small-screen) {
    max-width: 90vw;
    padding-right: 0.5rem;
    top: 25%
  }

  @media screen and (max-width: variables.$medium-screen) {
    max-width: 90vw;
    padding-right: 2rem;
    top: 13%;
  }
    
  @media (min-width: variables.$large-screen) {
    top: 20%;
    padding-right: 10rem;
  }
}


.libraryImage {
  aspect-ratio: 16 / 9;
  margin-top: 3rem;
  object-fit: contain;
  max-width: 80%;
  align-self: center;
  z-index: 2;

  @media screen and (max-width: variables.$medium-screen) {
    margin-top: 35rem;
    margin-left: auto;
    margin-right: auto;
  }

  @media screen and (min-width: variables.$medium-screen) {
    top: 8rem;
    left: 2rem;
    width: 55%;
  }

  @media screen and (min-width: variables.$large-screen) {
    width: 60%;
  }
}

.libraryScrollerContainer {
  overflow-x: hidden;
  width: 2000px;
  -webkit-mask: linear-gradient(
    90deg,
    transparent,
    white 20%,
    white 80%,
    transparent
  );
  mask: linear-gradient(90deg, transparent 0vw, white 20vw, white 80vw, transparent 100vw);
} 

.libraryScroller {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  animation: scroll 40s forwards linear infinite;
}

.libraryScrollerInner {
  max-height: 400px;
  width: max-content;
  display: flex;
  flex-direction: column;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  text-decoration: none;

}

.libraryScrollerInnerImage {
  height: 250px;
  border-radius: 2rem;
  margin-bottom: 0.5rem;
}

.libraryScrollerInnerTitle { 
  font-size: 1.25rem;
  margin: 0;
  color: variables.$white;
  text-decoration: none;
  font-weight: 700;
}

@keyframes scroll {
  to {
    transform: translate(calc(-100% - 8rem));
  }
}